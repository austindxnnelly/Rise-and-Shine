# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  Build_APK:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
     # working-directory: ./FolderName  #Uncomment me - if your gradle file is inside a folder
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build

  Instrumental_Tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Grant execute permission for gradlew
      # working-directory: ./FolderName  #Uncomment me - if your gradle file is inside a folder
        run: chmod +x gradlew
      - name: Instrumentation Tests
      # working-directory: ./FolderName  #Uncomment me - if your gradle file is inside a folder
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 28
          script: ./gradlew connectedAndroidTest

  Unit_Tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Grant execute permission for gradlew
      # working-directory: ./FolderName  #Uncomment me - if your gradle file is inside a folder
        run: chmod +x gradlew
      - name: Unit tests
      # working-directory: ./FolderName  #Uncomment me - if your gradle file is inside a folder
        run: ./gradlew test
